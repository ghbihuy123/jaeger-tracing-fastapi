services:
  server:
    build:
      context: .
    container_name: time-server
    environment:
      MODE: "otlp-grpc"
      OTEL_SERVICE_NAME: "app-a"
      OTLP_GRPC_ENDPOINT: "otel-collector:4317"
      TARGET_ONE_HOST: "app-b"
      TARGET_TWO_HOST: "app-c"
    ports:
      - 8000:8000
    depends_on:
      - otel-collector


  app-b:
    build:
      context: .
    # image: ghcr.io/blueswen/fastapi-jaeger/app:latest
    ports:
      - "8001:8000"
    environment:
      MODE: "otlp-http"
      OTEL_SERVICE_NAME: "app-b"
      OTLP_HTTP_ENDPOINT: "http://otel-collector:4318/v1/traces"
      TARGET_ONE_HOST: "app-b"
      TARGET_TWO_HOST: "app-c"
    depends_on:
      - otel-collector

  app-c:
    build: .
    # image: ghcr.io/blueswen/fastapi-jaeger/app:latest
    ports:
      - "8002:8000"
    environment:
      MODE: "otlp-grpc"
      OTEL_SERVICE_NAME: "app-c"
      OTLP_GRPC_ENDPOINT: "jaeger-collector:4317"
      TARGET_ONE_HOST: "app-b"
      TARGET_TWO_HOST: "app-c"
    depends_on:
      - otel-collector

  prometheus:
    image: prom/prometheus:v3.3.1
    container_name: prometheous
    ports:
      - "9090:9090"
    volumes:
      - ./etc/prometheus:/workspace
    command:
      - --config.file=/workspace/prometheus.yml
      - --enable-feature=exemplar-storage
    depends_on:
      - otel-collector
      - jaeger-collector
      - loki

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3004:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana

  jaeger-collector:
    image: jaegertracing/jaeger-collector:1.57.0
    container_name: jaeger-collector
    command: 
      - "--cassandra.keyspace=jaeger_v1_dc1"
      - "--cassandra.servers=cassandra"
      - "--collector.otlp.enabled=true"
    environment: 
      - SAMPLING_CONFIG_TYPE=adaptive
    ports:
      - "4444:4317" # accept OpenTelemetry Protocol (OTLP) over gRPC
      - "4445:4318" # accept OpenTelemetry Protocol (OTLP) over HTTP
    restart: on-failure
    depends_on:
      - cassandra-schema

  jaeger-query:
    image: jaegertracing/jaeger-query:1.57.0
    container_name: jaeger-query
    command:
      - "--cassandra.keyspace=jaeger_v1_dc1"
      - "--cassandra.servers=cassandra"
    ports:
      - "16686:16686"
      - "16687:16687"
    restart: on-failure
    depends_on:
      - cassandra
      - cassandra-schema
      - jaeger-collector

  cassandra:
    image: cassandra:4.1.4
    container_name: cassandra

  cassandra-schema:
    image: jaegertracing/jaeger-cassandra-schema:1.57.0
    depends_on:
      - cassandra

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.100.0
    container_name: otel-collector
    command:
      - "--config=/conf/config.yaml"
    volumes:
      - ./etc/collector/otel-collector-config.yml:/conf/config.yaml
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "8889:8889" # Prometheus metrics exporter
    restart: on-failure
    depends_on:
      - jaeger-collector
      - loki

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./etc/loki/loki-config.yml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
volumes:
  grafana_data: